#/bin/bash -eu

readonly REPOSITORY_DIR=$(cd $(dirname ${BASH_SOURCE:-$0}); pwd)

EXCLUDE_DOTFILES=()
EXCLUDE_DOTFILES=("${EXCLUDE_DOTFILES[@]}" ".git")
EXCLUDE_DOTFILES=("${EXCLUDE_DOTFILES[@]}" ".DS_Store")
EXCLUDE_DOTFILES=("${EXCLUDE_DOTFILES[@]}" ".gitignore")
EXCLUDE_DOTFILES=("${EXCLUDE_DOTFILES[@]}" ".env")


function sub () {
  for f in .??*; do
    [[ "$f" == ".git" ]] && continue
    [[ "$f" == ".DS_Store" ]] && continue
    [[ "$f" == ".gitignore" ]] && continue
    echo ${f}
    ln -si "${SCRIPT_DIR}/${f}" ~/
  done
}

function sub2 () {
  echo "aaa"
  cd ${REPOSITORY_DIR}
  for f in .??*; do
    if "$(isExcludeDotFile ${f})"; then
      continue
    fi
    if [ ${f} = ".config" ]; then
      if "$(dotConfDirExists ${HOME})"; then
        createSymbolicLinkAsConfigDir
      else
        createSymbolicLinkAsHomeDir
      fi
    fi
  done
}

function createSymbolicLinkAsHomeDir () {
  ln -s "${REPOSITORY_DIR}/.config" "${HOME}/"
}

function createSymbolicLinkAsConfigDir() {
  local configDir="${REPOSITORY_DIR}/.config"
  cd ${configDir}
  for f in *; do
    ln -s "${configDir}/${f}" "${HOME}/.config/"
  done
  cd -
}

function dotConfDirExists () {
  local homeDir="${1}"
  if [ -d "${homeDir}/.config" ]; then
    echo "true"
    return
  else
    echo "false"
    return
  fi
}

function isExcludeDotFile () {
  for ((i=0; i<${#EXCLUDE_DOTFILES[@]}; i++)) {
    if [ "${1}" = "${EXCLUDE_DOTFILES[i]}" ]; then
      echo "true"
      return
    fi
  }
  echo "false"
  return
}
